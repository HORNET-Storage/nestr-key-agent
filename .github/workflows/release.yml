name: Release Nestr Key Agent

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-macos-pkg:
    name: Build macOS PKG Installer
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Build binary for ${{ matrix.arch }}
        run: |
          cd services/generic
          GOOS=darwin GOARCH=${{ matrix.arch }} go build -o ../../keyagent -ldflags "-s -w" .
          cd ../..
          chmod +x keyagent

      - name: Get version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="0.0.0"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Create package structure
        run: |
          # Create directory structure for pkgbuild
          mkdir -p pkg-root/usr/local/bin
          mkdir -p pkg-root/Library/LaunchDaemons
          mkdir -p pkg-root/usr/local/share/nestr-key-agent
          mkdir -p pkg-scripts

          # Copy binary
          cp keyagent pkg-root/usr/local/bin/
          chmod 755 pkg-root/usr/local/bin/keyagent

          # Copy launchd plist
          cp packaging/macos/com.hornetstorage.nestr-key-agent.plist pkg-root/Library/LaunchDaemons/
          chmod 644 pkg-root/Library/LaunchDaemons/com.hornetstorage.nestr-key-agent.plist

          # Copy documentation
          cp LICENSE README.md pkg-root/usr/local/share/nestr-key-agent/

          # Copy scripts
          cp packaging/macos/postinstall.sh pkg-scripts/postinstall
          cp packaging/macos/preremove.sh pkg-scripts/preinstall
          chmod +x pkg-scripts/*

      - name: Build PKG installer
        run: |
          # Build the package
          pkgbuild \
            --root pkg-root \
            --scripts pkg-scripts \
            --identifier com.hornetstorage.nestr-key-agent \
            --version ${{ steps.get_version.outputs.VERSION }} \
            --install-location / \
            NestrKeyAgent-${{ steps.get_version.outputs.VERSION }}-darwin-${{ matrix.arch }}.pkg

      - name: Upload PKG artifact
        uses: actions/upload-artifact@v4
        with:
          name: keyagent-macos-pkg-${{ matrix.arch }}
          path: NestrKeyAgent-*.pkg

  build-nsis-installer:
    name: Build Windows NSIS Installer
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Build Windows executables
        run: |
          # Build key agent service
          cd services/windows
          go build -o ../../keyagent.exe -ldflags "-s -w" .
          cd ../..
        env:
          GOOS: windows
          GOARCH: amd64
          CGO_ENABLED: 0

      - name: Install NSIS
        run: |
          choco install nsis -y

      - name: Add NSIS to PATH
        shell: pwsh
        run: echo "C:\Program Files (x86)\NSIS" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Install NSIS Plugins
        shell: pwsh
        run: |
          # Download and install SimpleSC for service management
          Invoke-WebRequest -Uri "https://nsis.sourceforge.io/mediawiki/images/e/ef/NSIS_Simple_Service_Plugin_Unicode_1.30.zip" -OutFile "SimpleSC.zip"
          Expand-Archive -Path "SimpleSC.zip" -DestinationPath "SimpleSC_temp"
          Copy-Item "SimpleSC_temp\SimpleSC.dll" -Destination "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\" -Force

          # Download and install EnVar plugin for PATH management
          Invoke-WebRequest -Uri "https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip" -OutFile "EnVar_plugin.zip"
          Expand-Archive -Path "EnVar_plugin.zip" -DestinationPath "EnVar_temp"
          Copy-Item "EnVar_temp\Plugins\x86-unicode\*.dll" -Destination "C:\Program Files (x86)\NSIS\Plugins\x86-unicode\" -Force

      - name: Copy files for NSIS
        run: |
          Copy-Item keyagent.exe scripts/
          Copy-Item LICENSE scripts/
          Copy-Item README.md scripts/
          Copy-Item agent.protobuf scripts/

      - name: Build NSIS installer
        shell: pwsh
        run: |
          makensis scripts/keyagent-installer.nsi

      - name: Upload NSIS installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: keyagent-windows-installer
          path: scripts/NestrKeyAgent-Setup.exe

  goreleaser:
    name: Build and Release with GoReleaser
    runs-on: ubuntu-latest
    needs:
      - build-macos-pkg
      - build-nsis-installer
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.1'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download NSIS installer
        uses: actions/download-artifact@v4
        with:
          name: keyagent-windows-installer
          path: dist/

      - name: Download macOS PKG installers
        uses: actions/download-artifact@v4
        with:
          pattern: keyagent-macos-pkg-*
          path: dist/
          merge-multiple: true

      - name: Upload installers to release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/NestrKeyAgent-Setup.exe
            dist/NestrKeyAgent-*.pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
